{"version":3,"sources":["reducers/index.js","reducers/images.js","actions/actionTypes.js","reducers/query.js","reducers/scrollLoads.js","reducers/perScrollLoad.js","reducers/modal.js","reducers/modalImage.js","components/FormTitle.js","components/FormInput.js","actions/setQuery.js","api/keys/pexelsKeys.js","api/pexels.js","actions/fetchImages.js","actions/updateScrollLoads.js","components/SearchForm.js","actions/setModalImage.js","components/ImageCard.js","actions/openModal.js","components/ImageCardContainer.js","components/ModalImage.js","components/Modal.js","actions/closeModal.js","components/App.js","index.js"],"names":["combineReducers","images","action","type","console","log","payload","data","photos","query","scrollLoads","loads","perLoad","per_load","isModalOpen","isOpen","modalImage","image","FormTitle","href","className","connect","state","setQuery","spellCheck","placeholder","value","onChange","e","target","KEYS","instance","axios","create","baseURL","headers","Authorization","PEXELS_KEYS","fetchImages","dispatch","getState","a","pexels","get","params","per_page","page","response","onSubmit","preventDefault","setModalImage","openModal","opacityDelay","useState","isOpaque","setIsOpaque","useEffect","setOpaque","setTimeout","onClick","src","large","alt","imageCardContainer","document","querySelector","imagesLoaded","Masonry","itemSelector","columnWidth","percentPosition","layout","dataLength","length","next","scrollThreshold","hasMore","loader","map","index","key","id","original","ReactModal","setAppElement","closeModal","onRequestClose","overlayClassName","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","thunk","App","rootElement","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.7a5102e2.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\r\n\r\nimport { imagesReducer } from './images';\r\nimport { queryReducer } from './query';\r\nimport { scrollLoadsReducer } from './scrollLoads';\r\nimport { perScrollLoadReducer } from './perScrollLoad';\r\nimport { modalReducer } from './modal';\r\nimport { modalImageReducer } from './modalImage';\r\n\r\nexport default combineReducers({\r\n  images: imagesReducer,\r\n  query: queryReducer,\r\n  scrollLoads: scrollLoadsReducer,\r\n  perLoad: perScrollLoadReducer,\r\n  isModalOpen: modalReducer,\r\n  modalImage: modalImageReducer\r\n})","import { FETCH_IMAGES_ON_SEARCH, FETCH_IMAGES_ON_SCROLL } from '../actions/actionTypes';\r\n// debugger;\r\n\r\nexport const imagesReducer = (images = [], action) => {\r\n  switch (action.type) {\r\n    case FETCH_IMAGES_ON_SEARCH:\r\n      console.log(action.payload);\r\n      return action.payload.data.photos;\r\n    case FETCH_IMAGES_ON_SCROLL:\r\n      console.log(action.payload);\r\n      return [...images, ...action.payload.data.photos]\r\n    default:\r\n      return images;\r\n  }\r\n}","export const FETCH_IMAGES_ON_SEARCH = 'FETCH_IMAGES_ON_SEARCH';\r\nexport const FETCH_IMAGES_ON_SCROLL = 'FETCH_IMAGES_ON_SCROLL';\r\nexport const SET_QUERY = 'SET_QUERY';\r\nexport const UPDATE_SCROLL_LOADS = 'UPDATE_SCROLL_LOADS';\r\nexport const SET_IMAGES_NO_PER_SCROLL_LOAD = 'SET_IMAGES_NO_PER_SCROLL_LOAD';\r\nexport const OPEN_MODAL = 'OPEN_MODAL';\r\nexport const CLOSE_MODAL = 'CLOSE_MODAL';\r\nexport const SET_MODAL_IMAGE = 'SET_MODAL_IMAGE';\r\nexport const SET_SCROLL_LOADS = 'SET_SCROLL_LOADS';\r\n","import { SET_QUERY } from '../actions/actionTypes';\r\n\r\nexport const queryReducer = (query = '', action) => {\r\n  switch (action.type) {\r\n    case SET_QUERY:\r\n      console.log(action.payload);\r\n      return action.payload;\r\n    default:\r\n      return query;\r\n  }\r\n}","import { SET_SCROLL_LOADS } from '../actions/actionTypes';\r\n\r\nexport const scrollLoadsReducer = (loads = 0, action) => {\r\n  switch (action.type) {\r\n    case SET_SCROLL_LOADS:\r\n      return loads + 1\r\n    default:\r\n      return loads;\r\n  }\r\n}","import { SET_IMAGES_NO_PER_SCROLL_LOAD } from '../actions/actionTypes';\r\n\r\nexport const perScrollLoadReducer = (per_load = 20, action) => {\r\n  switch (action.type) {\r\n    case SET_IMAGES_NO_PER_SCROLL_LOAD:\r\n      return action.payload.per_load;\r\n    default:\r\n      return per_load;\r\n  }\r\n}","import { OPEN_MODAL, CLOSE_MODAL } from '../actions/actionTypes';\r\n\r\nexport const modalReducer = (isOpen = false, action) => {\r\n  switch (action.type) {\r\n    case OPEN_MODAL:\r\n      return true;\r\n    case CLOSE_MODAL:\r\n      return false;\r\n    default:\r\n      return isOpen;\r\n  }\r\n}","import { SET_MODAL_IMAGE } from '../actions/actionTypes';\r\n\r\nexport const modalImageReducer = (image = null, action) => {\r\n  switch (action.type) {\r\n    case SET_MODAL_IMAGE:\r\n      return action.payload;\r\n    default:\r\n      return image;\r\n    }\r\n}","import React from 'react';\r\n\r\nconst FormTitle = () =>\r\n  <a href=\"/imagery\" className=\"formTitle\">\r\n    imagery.\r\n  </a>\r\n\r\nexport default FormTitle;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { setQuery } from '../actions/setQuery';\r\n\r\nconst FormInput = ({ query, setQuery }) => \r\n  <div className=\"formInputContainer\">\r\n    <input\r\n      className=\"formInput\"\r\n      type=\"text\"\r\n      spellCheck=\"false\"\r\n      placeholder=\"Search stock photos\"\r\n      value={ query }\r\n      onChange={ e => setQuery(e.target.value) }\r\n    />\r\n    <button\r\n      type=\"submit\"\r\n      className=\"searchIcon\"\r\n    >\r\n      <i className=\"fas fa-search\" />\r\n    </button>\r\n  </div>\r\n\r\nconst mapStateToProps = state => ({ query: state.query })\r\n\r\nexport default connect(mapStateToProps, { setQuery })(FormInput);","import { SET_QUERY } from './actionTypes';\r\n\r\nexport const setQuery = query => ({ type: SET_QUERY, payload: query });\r\n","const KEYS = [\r\n  '563492ad6f9170000100000172b1e86d0afa4b77a6fa2a3c6f452460',\r\n  '563492ad6f91700001000001cc1c1c42d7d749968d5bbb920ad21688',\r\n  '563492ad6f917000010000017a1d9c70c748417ea6e670fb840a0958'\r\n]\r\n\r\nexport default KEYS;","import axios from 'axios/index'\r\nimport PEXELS_KEYS from './keys/pexelsKeys'\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://api.pexels.com/',\r\n  headers: {\r\n    Authorization: PEXELS_KEYS[0]\r\n  }\r\n});\r\n\r\nexport default instance;","import { FETCH_IMAGES_ON_SEARCH, FETCH_IMAGES_ON_SCROLL } from './actionTypes';\r\nimport { updateScrollLoads } from './updateScrollLoads';\r\nimport pexels from '../api/pexels';\r\n// debugger;\r\nexport const fetchImages = () => async (dispatch, getState) => {\r\n  const response = await pexels.get('/v1/search', {\r\n    params: {\r\n      query: getState().query,\r\n      per_page: getState().perLoad,\r\n      page: getState().scrollLoads + 1\r\n    }\r\n  })\r\n  await dispatch(updateScrollLoads());\r\n  dispatch({\r\n    type: !getState().scrollLoads ? FETCH_IMAGES_ON_SEARCH : FETCH_IMAGES_ON_SCROLL,\r\n    payload: response \r\n  })  \r\n}","import { SET_SCROLL_LOADS } from './actionTypes';\r\n// debugger\r\nexport const updateScrollLoads = () => ({ type: SET_SCROLL_LOADS });","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nimport FormTitle from './FormTitle';\r\nimport FormInput from './FormInput';\r\nimport { fetchImages } from '../actions/fetchImages'\r\n\r\nconst SearchForm = ({ fetchImages }) => \r\n  <header>\r\n    <form\r\n      onSubmit={e => {\r\n        e.preventDefault();\r\n        fetchImages();\r\n      }}  \r\n      className=\"searchForm\"\r\n    >\r\n      <FormTitle />\r\n      <FormInput />\r\n    </form>\r\n  </header>\r\n\r\n\r\nexport default connect(null, { fetchImages })(SearchForm);","import { SET_MODAL_IMAGE } from './actionTypes';\r\n\r\nexport const setModalImage = image => ({ type: SET_MODAL_IMAGE, payload: image });","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { openModal } from '../actions/openModal';\r\n\r\nconst ImageCard = ({ image, opacityDelay, openModal }) => {\r\n  \r\n  const [isOpaque, setIsOpaque] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setOpaque();\r\n  }, []);\r\n  \r\n  const setOpaque = () => {\r\n    setTimeout(() => {\r\n      setIsOpaque(true);\r\n    }, opacityDelay);\r\n  }\r\n  \r\n  return (\r\n    <div\r\n      className={`imageCard${isOpaque ? '' : ' hidden'}`}\r\n      onClick={\r\n        // e => console.log(image)\r\n        () => {\r\n          openModal(image);\r\n        }\r\n      }\r\n    >\r\n      <img src={image.src.large} alt=\"\"/>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  modalImage: state.modalImage\r\n})\r\n\r\nexport default connect(mapStateToProps, { openModal })(ImageCard);","import { OPEN_MODAL } from './actionTypes';\r\nimport { setModalImage } from './setModalImage';\r\n\r\nexport const openModal = image => async (dispatch, getState) => {\r\n  await dispatch(setModalImage(image));\r\n  dispatch({ type: OPEN_MODAL, payload: getState().modalImage });\r\n};","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport Masonry from 'masonry-layout';\r\nimport imagesLoaded from 'imagesloaded';\r\n\r\nimport { fetchImages } from '../actions/fetchImages';\r\nimport ImageCard from './ImageCard';\r\n\r\nconst ImageCardContainer = ({ images, fetchImages }) => {\r\n  \r\n  useEffect(() => {\r\n    const imageCardContainer = document.querySelector('.imageCardContainer');\r\n    imagesLoaded(imageCardContainer, () => \r\n      new Masonry(imageCardContainer, {\r\n        itemSelector: '.imageCard',\r\n        columnWidth: '.imageCardSizer',\r\n        percentPosition: true\r\n      }).layout()\r\n    )\r\n  })\r\n  const renderCardSizer = () => <div className=\"imageCardSizer\" />\r\n\r\n  const renderImages = () => images.map((image, index) =>\r\n    <ImageCard\r\n      key={ image.id }\r\n      opacityDelay={ 15 * index }\r\n      image={ image }\r\n      \r\n    />\r\n  )\r\n\r\n\r\n  return (\r\n    <main\r\n      className=\"imageCardContainer\"\r\n    >\r\n      <InfiniteScroll\r\n        dataLength={ images.length }\r\n        next={ fetchImages }\r\n        scrollThreshold={ 0.8 }\r\n        hasMore={ true }\r\n        loader={ <div /> }\r\n      >\r\n        { renderCardSizer() }\r\n        { renderImages() }\r\n      </InfiniteScroll>\r\n    </main>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  images: state.images,\r\n  modalImage: state.modalImage\r\n})\r\n\r\nexport default connect(mapStateToProps, { fetchImages })(ImageCardContainer);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nconst ModalImage = ({ modalImage }) => \r\n  <img\r\n    src={ modalImage.src.original }\r\n    alt=\"\"\r\n  />\r\n\r\nconst mapStateToProps = state => ({\r\n  modalImage: state.modalImage\r\n})\r\n\r\nexport default connect(mapStateToProps)(ModalImage);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ReactModal from 'react-modal';\r\n\r\nimport { closeModal } from '../actions/closeModal';\r\nimport ModalImage from './ModalImage';\r\n\r\nReactModal.setAppElement('#root');\r\n\r\nconst Modal = ({ closeModal, isModalOpen, image }) => \r\n  <ReactModal \r\n    isOpen={ isModalOpen }\r\n    onRequestClose={ closeModal }\r\n    className=\"Modal\"\r\n    overlayClassName=\"Overlay\"\r\n  >\r\n    <ModalImage />\r\n  </ReactModal>\r\n\r\nconst mapStateToProps = state => ({\r\n  isModalOpen: state.isModalOpen,\r\n  image: state.modalImage\r\n})\r\n\r\nexport default connect(mapStateToProps, { closeModal })(Modal);","import { CLOSE_MODAL } from './actionTypes';\r\n\r\nexport const closeModal = image => ({ type: CLOSE_MODAL, payload: image });","import React from 'react';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport reducers from '../reducers';\r\nimport SearchForm from './SearchForm';\r\nimport ImageCardContainer from './ImageCardContainer'\r\nimport Modal from './Modal'\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(\r\n    applyMiddleware(thunk)\r\n  ));\r\n\r\n// const store = createStore(reducers, applyMiddleware(thunk));\r\n\r\nconst App = () => \r\n  <Provider store={ store }>\r\n    <div className=\"App container\">\r\n      <SearchForm />\r\n      <ImageCardContainer />\r\n      <Modal />\r\n    </div>\r\n  </Provider>\r\n\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './components/App';\r\n\r\nconst rootElement = document.getElementById('root');\r\n\r\nReactDOM.render(<App />, rootElement);"],"sourceRoot":""}