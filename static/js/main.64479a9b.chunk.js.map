{"version":3,"sources":["components/ImageCard.js","components/FormTitle.js","components/FormInput.js","components/SearchForm.js","api/pexels.js","api/keys/pexelsKey.js","components/App.js","index.js"],"names":["ImageCard","props","state","hidden","blurred","imageRef","React","createRef","show","bind","triggerModal","setTimeout","this","opacityDelay","current","addEventListener","setState","image","className","src","ref","alt","Component","FormTitle","href","FormInput","term","onInputChange","e","target","value","onChange","type","spellCheck","placeholder","autoFocus","SearchForm","onFormSubmit","preventDefault","querySelector","blur","onSubmit","instance","axios","create","baseURL","headers","Authorization","ReactModal","setAppElement","App","per_load","loads","images","currentImage","currentTerm","showModal","fetchImages","handleOpenModal","handleCloseModal","imageContainer","document","imagesLoaded","Masonry","itemSelector","columnWidth","percentPosition","layout","searchTerm","pexels","get","params","query","per_page","page","then","object","data","photos","catch","error","classList","toggle","dataLength","length","next","scrollThreshold","hasMore","loader","map","index","key","id","large","isOpen","contentLabel","onRequestClose","overlayClassName","undefined","original","rootElement","getElementById","ReactDOM","render"],"mappings":"4SAmDeA,E,YAhDb,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAEDC,MAAQ,CACXC,QAAQ,EACRC,SAAS,GAGX,EAAKC,SAAWC,IAAMC,YAEtB,EAAKC,KAAO,EAAKA,KAAKC,KAAV,gBACZ,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBAXH,E,iFAeE,IAAD,OAClBE,YAAW,WACT,EAAKH,SACJI,KAAKX,MAAMY,cAEdD,KAAKP,SAASS,QAAQC,iBAAiB,QAASH,KAAKF,gB,6BAKrDE,KAAKI,SAAS,CAAEb,QAAQ,M,qCAKxBS,KAAKX,MAAMS,aAAa,CAAEO,MAAOL,KAAKX,MAAMgB,U,+BAK5C,OACI,yBAAKC,UAAS,oBAAgBN,KAAKV,MAAMC,OAAS,SAAW,KAC3D,yBACEgB,IAAMP,KAAKX,MAAMkB,IACjBC,IAAMR,KAAKP,SACXgB,IAAI,U,GAzCQC,aCWTC,E,iLATX,OACE,uBAAGC,KAAK,IAAIN,UAAU,aAAtB,gB,GAHkBI,aCoBTG,E,YAnBb,WAAYxB,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,MAAQ,CAAEwB,KAAM,IACrB,EAAKC,cAAgB,EAAKA,cAAclB,KAAnB,gBAHJ,E,2EAMLmB,GACZhB,KAAKI,SAAS,CAAEU,KAAME,EAAEC,OAAOC,QAC/BlB,KAAKX,MAAM8B,SAASH,EAAEC,OAAOC,S,+BAI7B,OACE,2BAAOZ,UAAU,YAAYc,KAAK,OAAOC,WAAW,QAAQC,YAAY,sBAAsBJ,MAAQlB,KAAKV,MAAMwB,KAAOK,SAAWnB,KAAKe,cAAgBQ,WAAS,Q,GAd/Ib,aCqCTc,E,YAjCb,WAAYnC,GAAQ,IAAD,8BACjB,4CAAMA,KAEDC,MAAQ,CAAEwB,KAAM,IAErB,EAAKC,cAAgB,EAAKA,cAAclB,KAAnB,gBACrB,EAAK4B,aAAe,EAAKA,aAAa5B,KAAlB,gBANH,E,2EASLiB,GACZd,KAAKI,SAAS,CAAEU,KAAMA,M,mCAGXE,GACXA,EAAEU,iBACFV,EAAEC,OAAOU,cAAc,SAASC,OAChC5B,KAAKX,MAAMwC,SAAS7B,KAAKV,MAAMwB,Q,+BAK/B,OACE,gCACE,0BAAMe,SAAW7B,KAAKyB,aAAenB,UAAU,cAC7C,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAWa,SAAWnB,KAAKe,sB,GA1BZL,a,QCKVoB,E,OAPEC,EAAMC,OAAO,CAC5BC,QAAS,0BACTC,QAAS,CACPC,cCNQ,8DCWZC,IAAWC,cAAc,S,IA+GVC,E,YA5Gb,aAAe,IAAD,8BACZ,+CACKhD,MAAQ,CACXiD,SAAU,GACVC,MAAO,EACPC,OAAQ,GACRC,aAAc,GACdC,YAAa,KACbC,WAAW,GAEb,EAAKC,YAAc,EAAKA,YAAYhD,KAAjB,gBACnB,EAAKiD,gBAAkB,EAAKA,gBAAgBjD,KAArB,gBACvB,EAAKkD,iBAAmB,EAAKA,iBAAiBlD,KAAtB,gBAZZ,E,kFAgBZ,IAAMmD,EAAiBC,SAAStB,cAAc,mBAE9CuB,IAAaF,GAAgB,kBAC3B,IAAIG,IAAQH,EAAgB,CAC1BI,aAAc,aACdC,YAAa,kBACbC,iBAAiB,IAChBC,c,kCAIKC,GAAa,IAAD,OACtBC,EAAOC,IAAI,aAAc,CACvBC,OAAQ,CACNC,MAAOJ,GAAcxD,KAAKV,MAAMqD,YAChCkB,SAAU7D,KAAKV,MAAMiD,SACrBuB,KAAM9D,KAAKV,MAAMkD,MAAQ,KAG1BuB,MAAK,SAAAC,GACJ,EAAK5D,SAAS,CACZqC,OAAQe,EAAaQ,EAAOC,KAAKC,OAAf,sBAA4B,EAAK5E,MAAMmD,QAAvC,YAAkDuB,EAAOC,KAAKC,SAChF1B,MAAO,EAAKlD,MAAMkD,MAAQ,EAC1BG,YAAaa,GAAc,EAAKlE,MAAMqD,iBAGzCwB,OAAM,SAAAC,S,yCAGiB,IAAV/D,EAAS,EAATA,MAChBL,KAAKI,SAAS,CACZwC,WAAW,EACXF,aAAcrC,IAEhB4C,SAAStB,cAAc,YAAY0C,UAAUC,OAAO,qB,yCAIpDtE,KAAKI,SAAS,CAAEwC,WAAW,IAC3BK,SAAStB,cAAc,YAAY0C,UAAUC,OAAO,qB,+BAK5C,IAAD,OACP,OACE,yBAAKhE,UAAU,iBACb,kBAAC,EAAD,CAAYuB,SAAW7B,KAAK6C,cAC5B,kBAAC,IAAD,CACEvC,UAAU,iBACViE,WAAavE,KAAKV,MAAMmD,OAAO+B,OAC/BC,KAAOzE,KAAK6C,YACZ6B,gBAAkB,GAClBC,SAAU,EACVC,OAAS,+BAGT,yBAAKtE,UAAU,mBAEdN,KAAKV,MAAMmD,OAAOoC,KAAI,SAACxE,EAAOyE,GAAR,OACrB,kBAAC,EAAD,CACEC,IAAM7B,IAAa8B,GACnB/E,aAAe,GAAK6E,EACpBvE,IAAMF,EAAME,IAAI0E,MAChB5E,MAAQA,EACRP,aAAe,EAAKgD,qBAIxB,kBAAC,IAAD,CACEoC,OAASlF,KAAKV,MAAMsD,UACpBuC,aAAa,iBACbC,eAAiBpF,KAAK+C,iBACtBzC,UAAU,QACV+E,iBAAiB,WAEf,yBACE9E,SACkC+E,IAAhCtF,KAAKV,MAAMoD,aAAanC,IACtBP,KAAKV,MAAMoD,aAAanC,IAAIgF,SAC5B,GAEJ9E,IAAI,Y,GAnGFC,aCRZ8E,EAAcvC,SAASwC,eAAe,QAE5CC,IAASC,OAAO,kBAAC,EAAD,MAASH,K","file":"static/js/main.64479a9b.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass ImageCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      hidden: true,\r\n      blurred: true\r\n    };\r\n\r\n    this.imageRef = React.createRef();\r\n\r\n    this.show = this.show.bind(this);\r\n    this.triggerModal = this.triggerModal.bind(this);\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    setTimeout(() => {\r\n      this.show();\r\n    }, this.props.opacityDelay)\r\n\r\n    this.imageRef.current.addEventListener('click', this.triggerModal);\r\n\r\n  }\r\n\r\n  show() {\r\n    this.setState({ hidden: false })\r\n  }\r\n\r\n\r\n  triggerModal() {\r\n    this.props.triggerModal({ image: this.props.image });\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n        <div className={ `imageCard ${this.state.hidden ? 'hidden' : '' }`}>\r\n          <img\r\n            src={ this.props.src }\r\n            ref={ this.imageRef }\r\n            alt=\"\"\r\n          />\r\n        </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default ImageCard;","import React, { Component } from 'react';\r\n\r\nclass FormTitle extends Component {\r\n  render() {\r\n    return (\r\n      <a href=\"/\" className=\"formTitle\">\r\n        imagery.\r\n      </a>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default FormTitle;","import React, { Component } from 'react';\r\n\r\nclass FormInput extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { term: '' };\r\n    this.onInputChange = this.onInputChange.bind(this);\r\n  }\r\n\r\n  onInputChange(e) {\r\n    this.setState({ term: e.target.value });\r\n    this.props.onChange(e.target.value);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <input className=\"formInput\" type=\"text\" spellCheck=\"false\" placeholder=\"Search stock photos\" value={ this.state.term } onChange={ this.onInputChange } autoFocus />\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default FormInput;","import React, { Component } from 'react';\r\n\r\nimport FormTitle from './FormTitle';\r\nimport FormInput from './FormInput';\r\n\r\nclass SearchForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { term: '' }\r\n\r\n    this.onInputChange = this.onInputChange.bind(this);\r\n    this.onFormSubmit = this.onFormSubmit.bind(this);\r\n  }\r\n\r\n  onInputChange(term) {\r\n    this.setState({ term: term });\r\n  }\r\n\r\n  onFormSubmit(e) {\r\n    e.preventDefault();\r\n    e.target.querySelector('input').blur();\r\n    this.props.onSubmit(this.state.term);\r\n  }\r\n  \r\n\r\n  render() {\r\n    return (\r\n      <header>\r\n        <form onSubmit={ this.onFormSubmit } className=\"searchForm\">\r\n          <FormTitle />\r\n          <FormInput onChange={ this.onInputChange }/>\r\n        </form>\r\n      </header>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default SearchForm;","import axios from 'axios/index'\r\nimport PEXELS_KEY from './keys/pexelsKey'\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://api.pexels.com/',\r\n  headers: {\r\n    Authorization: PEXELS_KEY\r\n  }\r\n});\r\n\r\nexport default instance;","const KEY = '563492ad6f91700001000001cc1c1c42d7d749968d5bbb920ad21688';\r\n// const KEY = '563492ad6f9170000100000172b1e86d0afa4b77a6fa2a3c6f452460';\r\n\r\nexport default KEY;","import React, { Component } from 'react';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport Masonry from 'masonry-layout';\r\nimport imagesLoaded from 'imagesloaded';\r\nimport ReactModal from 'react-modal';\r\n\r\nimport ImageCard from './ImageCard';\r\nimport SearchForm from './SearchForm';\r\n\r\nimport pexels from '../api/pexels';\r\n\r\nReactModal.setAppElement('#root');\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      per_load: 20,\r\n      loads: 0,\r\n      images: [],\r\n      currentImage: {},\r\n      currentTerm: null,\r\n      showModal: false\r\n    };\r\n    this.fetchImages = this.fetchImages.bind(this);\r\n    this.handleOpenModal = this.handleOpenModal.bind(this);\r\n    this.handleCloseModal = this.handleCloseModal.bind(this);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const imageContainer = document.querySelector('.imageContainer');\r\n    \r\n    imagesLoaded(imageContainer, () => \r\n      new Masonry(imageContainer, {\r\n        itemSelector: '.imageCard',\r\n        columnWidth: '.imageCardSizer',\r\n        percentPosition: true\r\n      }).layout()\r\n    )\r\n  }\r\n\r\n  fetchImages(searchTerm) {\r\n    pexels.get('/v1/search', {\r\n      params: {\r\n        query: searchTerm || this.state.currentTerm,\r\n        per_page: this.state.per_load,\r\n        page: this.state.loads + 1\r\n      }\r\n    })\r\n      .then(object => {\r\n        this.setState({\r\n          images: searchTerm ? object.data.photos : [...this.state.images, ...object.data.photos],\r\n          loads: this.state.loads + 1,\r\n          currentTerm: searchTerm || this.state.currentTerm\r\n        })\r\n      })\r\n      .catch(error => { });\r\n  }\r\n\r\n  handleOpenModal({ image }) {\r\n    this.setState({\r\n      showModal: true,\r\n      currentImage: image\r\n    })\r\n    document.querySelector('.Overlay').classList.toggle('backdropBlurred');\r\n  }\r\n\r\n  handleCloseModal() {\r\n    this.setState({ showModal: false });\r\n    document.querySelector('.Overlay').classList.toggle('backdropBlurred');\r\n  }\r\n\r\n  \r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App container\">\r\n        <SearchForm onSubmit={ this.fetchImages } />\r\n        <InfiniteScroll\r\n          className=\"imageContainer\"\r\n          dataLength={ this.state.images.length }\r\n          next={ this.fetchImages }\r\n          scrollThreshold={ 0.8 }\r\n          hasMore={ true }\r\n          loader={ <div /> }\r\n        >\r\n\r\n          <div className=\"imageCardSizer\"></div>\r\n\r\n          {this.state.images.map((image, index) =>\r\n            <ImageCard\r\n              key={ imagesLoaded.id }\r\n              opacityDelay={ 15 * index }\r\n              src={ image.src.large }\r\n              image={ image }\r\n              triggerModal={ this.handleOpenModal }\r\n            />\r\n          )}\r\n\r\n          <ReactModal \r\n            isOpen={ this.state.showModal }\r\n            contentLabel=\"onRequestClose\"\r\n            onRequestClose={ this.handleCloseModal }\r\n            className=\"Modal\"\r\n            overlayClassName=\"Overlay\"\r\n          >\r\n              <img\r\n                src={\r\n                  this.state.currentImage.src !== undefined\r\n                  ? this.state.currentImage.src.original\r\n                  : '' \r\n                }\r\n                alt=\"\"\r\n              >\r\n              </img>\r\n          </ReactModal>\r\n        </InfiniteScroll>\r\n      </div>\r\n    )\r\n  }\r\n} \r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './components/App';\r\n\r\nconst rootElement = document.getElementById('root');\r\n\r\nReactDOM.render(<App />, rootElement);"],"sourceRoot":""}