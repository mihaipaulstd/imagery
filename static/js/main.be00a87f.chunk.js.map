{"version":3,"sources":["components/FormTitle.js","components/FormInput.js","components/SearchForm.js","components/ImageCard.js","api/pexels.js","api/keys.js","components/App.js","index.js"],"names":["FormTitle","props","className","Component","FormInput","state","term","onInputChange","bind","e","this","setState","target","value","onChange","type","spellCheck","SearchForm","onFormSubmit","preventDefault","onSubmit","ImageCard","hidden","blurred","imageRef","React","createRef","show","hide","focus","blur","setTimeout","opacityDelay","blurDelay","src","ref","instance","axios","create","baseURL","headers","Authorization","name","key","find","api","App","per_load","loads","images","currentTerm","submitHandler","fetchImagesOnScroll","imageContainer","document","querySelector","imagesLoaded","Masonry","itemSelector","columnWidth","percentPosition","layout","pexels","get","params","query","per_page","page","then","object","data","photos","concat","dataLength","length","next","scrollThreshold","hasMore","loader","map","image","index","id","large2x","rootElement","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.be00a87f.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass FormTitle extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <h2 className=\"formTitle\">\r\n        Search images\r\n      </h2>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default FormTitle;","import React, { Component } from 'react';\r\n\r\nclass FormInput extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { term: '' };\r\n    this.onInputChange = this.onInputChange.bind(this);\r\n  }\r\n\r\n  onInputChange(e) {\r\n    this.setState({ term: e.target.value });\r\n    this.props.onChange(e.target.value);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <input className=\"formInput\" type=\"text\" spellCheck=\"false\" value={ this.state.term } onChange={ this.onInputChange }/>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default FormInput;","import React, { Component } from 'react';\r\n\r\nimport FormTitle from './FormTitle';\r\nimport FormInput from './FormInput';\r\n\r\nclass SearchForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { term: '' }\r\n\r\n    this.onInputChange = this.onInputChange.bind(this);\r\n    this.onFormSubmit = this.onFormSubmit.bind(this);\r\n  }\r\n\r\n  onInputChange(term) {\r\n    this.setState({ term: term });\r\n  }\r\n\r\n  onFormSubmit(e) {\r\n    e.preventDefault();\r\n    \r\n    this.props.onSubmit(this.state.term);\r\n  }\r\n  \r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={ this.onFormSubmit } className=\"searchForm\">\r\n        <FormTitle />\r\n        <FormInput onChange={ this.onInputChange }/>\r\n      </form>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default SearchForm;","import React, { Component } from 'react';\r\n\r\nclass ImageCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      hidden: true,\r\n      blurred: true\r\n    };\r\n\r\n    this.imageRef = React.createRef();\r\n\r\n    this.show = this.show.bind(this);\r\n    this.hide = this.hide.bind(this);\r\n    this.focus = this.focus.bind(this);\r\n    this.blur = this.blur.bind(this);\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    setTimeout(() => {\r\n      this.show();\r\n    }, this.props.opacityDelay)\r\n\r\n    setTimeout(() => {\r\n      this.focus();\r\n    }, this.props.blurDelay)\r\n\r\n  }\r\n\r\n  show() {\r\n    this.setState({ hidden: false })\r\n  }\r\n\r\n  hide() {\r\n    this.setState({ hidden: true })\r\n  }\r\n\r\n  focus() {\r\n    this.setState({ blurred: false })\r\n  }\r\n\r\n  blur() {\r\n    this.setState({ blurred: true })\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n        <div className={`imageCard ${this.state.hidden ? 'hidden' : ''} ${this.state.blurred ? 'blurred' : ''}`}>\r\n          <img\r\n            src={ this.props.src }\r\n            ref={ this.imageRef } \r\n          />\r\n        </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default ImageCard;","import axios from 'axios/index'\r\nimport keys from './keys'\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://api.pexels.com/',\r\n  headers: {\r\n    Authorization: keys.find(api => api.name == 'pexels').key\r\n  }\r\n});\r\n\r\nexport default instance;","export default [\r\n  {\r\n    name: 'pexels',\r\n    key: '563492ad6f91700001000001cc1c1c42d7d749968d5bbb920ad21688'\r\n    // key: '563492ad6f9170000100000172b1e86d0afa4b77a6fa2a3c6f452460'\r\n  }\r\n]","import React, { Component } from 'react';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\n\r\n\r\nimport SearchForm from './SearchForm';\r\nimport ImageCard from './ImageCard';\r\n\r\nimport pexels from '../api/pexels';\r\nimport Masonry from 'masonry-layout';\r\nimport imagesLoaded from 'imagesloaded';\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      per_load: 30,\r\n      loads: 1,\r\n      images: [],\r\n      currentTerm: null\r\n    };\r\n    this.submitHandler = this.submitHandler.bind(this);\r\n    this.fetchImagesOnScroll = this.fetchImagesOnScroll.bind(this);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n\r\n    const imageContainer = document.querySelector('.imageContainer');\r\n    \r\n\r\n    \r\n    \r\n    \r\n    imagesLoaded(imageContainer, () => \r\n      new Masonry(imageContainer, {\r\n        itemSelector: '.imageCard',\r\n        columnWidth: '.imageCardSizer',\r\n        percentPosition: true\r\n      }).layout()\r\n    )\r\n  }\r\n\r\n  submitHandler(term) {\r\n    pexels.get('/v1/search', {\r\n      params: {\r\n        query: term,\r\n        per_page: this.state.per_load,\r\n        page: this.state.loads\r\n      }\r\n    })\r\n      .then(object => {\r\n        this.setState({\r\n          images: object.data.photos,\r\n          currentTerm: term\r\n        })\r\n      });\r\n  }\r\n  \r\n  fetchImagesOnScroll() {\r\n    pexels.get('/v1/search', {\r\n      params: {\r\n        query: this.state.currentTerm,\r\n        per_page: this.state.per_load,\r\n        page: this.state.loads + 1\r\n      }\r\n    })\r\n      .then(object => {\r\n        this.setState({\r\n          images: this.state.images.concat(object.data.photos),\r\n          loads: this.state.loads + 1\r\n        })\r\n      });\r\n  }\r\n\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"app container\">\r\n        <SearchForm onSubmit={ this.submitHandler } />\r\n        <InfiniteScroll\r\n          className=\"imageContainer\"\r\n          dataLength={ this.state.images.length }\r\n          next={ this.fetchImagesOnScroll }\r\n          scrollThreshold={ 0.7 }\r\n          hasMore={ true }\r\n          loader={ <div /> }\r\n        >\r\n          <div className=\"imageCardSizer\"></div>\r\n          {this.state.images.map((image, index) =>\r\n            <ImageCard\r\n              key={ image.id }\r\n              opacityDelay={ 75 * index }\r\n              src={ image.src.large2x } \r\n            />\r\n          )}\r\n        </InfiniteScroll>\r\n      </div>\r\n    )\r\n  }\r\n} \r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './components/App';\r\n\r\nconst rootElement = document.getElementById('root');\r\n\r\nReactDOM.render(<App />, rootElement);"],"sourceRoot":""}