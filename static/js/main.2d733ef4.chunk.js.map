{"version":3,"sources":["reducers/index.js","reducers/images.js","actions/actionTypes.js","reducers/query.js","reducers/searchTerm.js","reducers/scrollLoads.js","reducers/perScrollLoad.js","reducers/modal.js","reducers/modalImage.js","components/FormTitle.js","actions/setQuery.js","components/FormInput.js","api/unsplash.js","api/keys/unsplash.js","actions/getImages.js","actions/updateScrollLoads.js","components/SearchForm.js","actions/getImagesOnSearch.js","actions/setSearchTerm.js","actions/setModalImage.js","components/ImageCard.js","actions/openModal.js","components/ImageCardContainer.js","actions/getImagesOnScroll.js","components/ModalImage.js","components/ModalArrow.js","components/ModalNavigation.js","components/Modal.js","actions/closeModal.js","components/App.js","index.js"],"names":["combineReducers","images","action","type","payload","data","results","query","searchTerm","scrollLoads","loads","perLoad","per_load","isModalOpen","isOpen","modalImage","image","FormTitle","href","className","setQuery","connect","state","spellCheck","placeholder","value","onChange","e","target","onClick","parentElement","blur","instance","axios","create","baseURL","headers","Authorization","getImages","dispatch","getState","a","unsplash","get","params","per_page","page","updateScrollLoads","getImagesOnSearch","response","onSubmit","preventDefault","querySelector","setModalImage","openModal","opacityDelay","useState","isOpaque","setIsOpaque","useEffect","setTimeout","src","urls","regular","alt","getImagesOnScroll","imageCardContainer","document","imagesLoaded","Masonry","itemSelector","columnWidth","percentPosition","layout","dataLength","length","next","scrollThreshold","hasMore","loader","map","index","key","id","raw","direction","ModalArrow","ReactModal","setAppElement","closeModal","onRequestClose","overlayClassName","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","thunk","App","rootElement","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.2d733ef4.chunk.js","sourcesContent":["import { combineReducers } from \"redux\";\r\n\r\nimport { imagesReducer } from \"./images\";\r\nimport { queryReducer } from \"./query\";\r\nimport { searchTermReducer } from './searchTerm';\r\nimport { scrollLoadsReducer } from \"./scrollLoads\";\r\nimport { perScrollLoadReducer } from \"./perScrollLoad\";\r\nimport { modalReducer } from \"./modal\";\r\nimport { modalImageReducer } from \"./modalImage\";\r\n\r\nexport default combineReducers({\r\n  images: imagesReducer,\r\n  query: queryReducer,\r\n  searchTerm: searchTermReducer,\r\n  scrollLoads: scrollLoadsReducer,\r\n  perLoad: perScrollLoadReducer,\r\n  isModalOpen: modalReducer,\r\n  modalImage: modalImageReducer\r\n});\r\n","import {\r\n  GET_IMAGES_ON_SEARCH,\r\n  GET_IMAGES_ON_SCROLL\r\n} from \"../actions/actionTypes\";\r\n\r\nexport const imagesReducer = (images = [], action) => {\r\n  switch (action.type) {\r\n    case GET_IMAGES_ON_SEARCH:\r\n      return action.payload.data.results;\r\n    case GET_IMAGES_ON_SCROLL:\r\n      return [...images, ...action.payload.data.results];\r\n    default:\r\n      return images;\r\n  }\r\n};\r\n","export const GET_IMAGES_ON_SEARCH = \"GET_IMAGES_ON_SEARCH\";\r\nexport const GET_IMAGES_ON_SCROLL = \"GET_IMAGES_ON_SCROLL\";\r\nexport const SET_QUERY = \"SET_QUERY\";\r\nexport const UPDATE_SCROLL_LOADS = \"UPDATE_SCROLL_LOADS\";\r\nexport const SET_IMAGES_NO_PER_SCROLL_LOAD = \"SET_IMAGES_NO_PER_SCROLL_LOAD\";\r\nexport const OPEN_MODAL = \"OPEN_MODAL\";\r\nexport const CLOSE_MODAL = \"CLOSE_MODAL\";\r\nexport const SET_MODAL_IMAGE = \"SET_MODAL_IMAGE\";\r\nexport const SET_SEARCH_TERM = \"SET_SEARCH_TERM\";\r\n","import { SET_QUERY } from \"../actions/actionTypes\";\r\n\r\nexport const queryReducer = (query = \"\", action) => {\r\n  switch (action.type) {\r\n    case SET_QUERY:\r\n      return action.payload;\r\n    default:\r\n      return query;\r\n  }\r\n};\r\n","import { SET_SEARCH_TERM } from \"../actions/actionTypes\";\r\n\r\nexport const searchTermReducer = (query = \"\", action) => {\r\n  switch (action.type) {\r\n    case SET_SEARCH_TERM:\r\n      return action.payload;\r\n    default:\r\n      return query;\r\n  }\r\n};\r\n","import { UPDATE_SCROLL_LOADS } from \"../actions/actionTypes\";\r\n\r\nexport const scrollLoadsReducer = (loads = 0, action) => {\r\n  switch (action.type) {\r\n    case UPDATE_SCROLL_LOADS:\r\n      return action.payload;\r\n    default:\r\n      return loads;\r\n  }\r\n};\r\n","import { SET_IMAGES_NO_PER_SCROLL_LOAD } from \"../actions/actionTypes\";\r\n\r\nexport const perScrollLoadReducer = (per_load = 40, action) => {\r\n  switch (action.type) {\r\n    case SET_IMAGES_NO_PER_SCROLL_LOAD:\r\n      return action.payload.per_load;\r\n    default:\r\n      return per_load;\r\n  }\r\n};\r\n","import { OPEN_MODAL, CLOSE_MODAL } from \"../actions/actionTypes\";\r\n\r\nexport const modalReducer = (isOpen = false, action) => {\r\n  switch (action.type) {\r\n    case OPEN_MODAL:\r\n      return true;\r\n    case CLOSE_MODAL:\r\n      return false;\r\n    default:\r\n      return isOpen;\r\n  }\r\n};\r\n","import { SET_MODAL_IMAGE } from \"../actions/actionTypes\";\r\n\r\nexport const modalImageReducer = (image = null, action) => {\r\n  switch (action.type) {\r\n    case SET_MODAL_IMAGE:\r\n      return action.payload;\r\n    default:\r\n      return image;\r\n  }\r\n};\r\n","import React from \"react\";\r\n\r\nconst FormTitle = () => (\r\n  <a href=\"/imagery\" className=\"formTitle\">\r\n    imagery.\r\n  </a>\r\n);\r\n\r\nexport default FormTitle;\r\n","import { SET_QUERY } from \"./actionTypes\";\r\n\r\nexport const setQuery = query => ({\r\n  type: SET_QUERY,\r\n  payload: query\r\n});\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { setQuery } from \"../actions/setQuery\";\r\n\r\nconst FormInput = ({ query, setQuery }) => (\r\n  <div className=\"formInputContainer\">\r\n    <input\r\n      className=\"formInput\"\r\n      type=\"text\"\r\n      spellCheck=\"false\"\r\n      placeholder=\"Search stock photos\"\r\n      value={query}\r\n      onChange={e => setQuery(e.target.value)}\r\n    />\r\n    <button\r\n      type=\"submit\"\r\n      className=\"searchIcon\"\r\n      onClick={e => e.target.parentElement.blur()}\r\n    >\r\n      <i className=\"fas fa-search\" />\r\n    </button>\r\n  </div>\r\n);\r\n\r\nconst mapStateToProps = state => ({ query: state.query });\r\n\r\nexport default connect(mapStateToProps, { setQuery })(FormInput);\r\n","import axios from \"axios/index\";\r\nimport { ACCESS_KEY } from \"./keys/unsplash\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"https://api.unsplash.com/\",\r\n  headers: {\r\n    Authorization: `Client-ID ${ACCESS_KEY}`\r\n  }\r\n});\r\n\r\nexport default instance;\r\n","export const ACCESS_KEY = \"Zd5MIEmI9A3mvb3rEQlTgfm_iPBTQlVFjdYtf7n2nTY\";","import unsplash from \"../api/unsplash\";\r\n\r\nexport const getImages = () => async (dispatch, getState) => \r\n  await unsplash.get(\"/search/photos\", {\r\n    params: {\r\n      query: getState().query || getState().searchTerm,\r\n      per_page: getState().perLoad,\r\n      page: getState().scrollLoads + 1\r\n    }\r\n  }\r\n);","import { UPDATE_SCROLL_LOADS } from \"./actionTypes\";\r\n// debugger\r\nexport const updateScrollLoads = (loads = 0) => ({\r\n  type: UPDATE_SCROLL_LOADS,\r\n  payload: loads\r\n});\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport FormTitle from \"./FormTitle\";\r\nimport FormInput from \"./FormInput\";\r\nimport { getImagesOnSearch } from \"../actions/getImagesOnSearch\";\r\n\r\n\r\nconst SearchForm = ({ getImagesOnSearch, query }) => (\r\n  <header>\r\n    <form\r\n      onSubmit={e => {\r\n        e.preventDefault();\r\n        e.target.querySelector(\"input\").blur();\r\n        if (query) {\r\n          getImagesOnSearch();\r\n        }\r\n      }}\r\n      className=\"searchForm\"\r\n    >\r\n      <FormTitle />\r\n      <FormInput />\r\n    </form>\r\n  </header>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  query: state.query\r\n})\r\n\r\nexport default connect(mapStateToProps, { getImagesOnSearch })(SearchForm);\r\n","import { GET_IMAGES_ON_SEARCH } from \"./actionTypes\";\r\nimport { getImages } from './getImages';\r\nimport { updateScrollLoads } from './updateScrollLoads';\r\nimport { setSearchTerm } from \"./setSearchTerm\";\r\nimport { setQuery } from './setQuery';\r\n\r\nexport const getImagesOnSearch = () => async (dispatch, getState) => {\r\n  const response = await dispatch(getImages());\r\n  await dispatch(setSearchTerm(getState().query));\r\n  await dispatch(setQuery(\"\"));\r\n  await dispatch({\r\n    type: GET_IMAGES_ON_SEARCH,\r\n    payload: response\r\n  });\r\n  dispatch(updateScrollLoads(1));\r\n};","import { SET_SEARCH_TERM } from './actionTypes';\r\n\r\nexport const setSearchTerm = term => ({\r\n  type: SET_SEARCH_TERM,\r\n  payload: term\r\n})","import {\r\n  SET_MODAL_IMAGE\r\n} from './actionTypes';\r\n\r\nexport const setModalImage = image => ({\r\n  type: SET_MODAL_IMAGE,\r\n  payload: image\r\n});","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { openModal } from \"../actions/openModal\";\r\n\r\nconst ImageCard = ({ image, opacityDelay, openModal }) => {\r\n  const [isOpaque, setIsOpaque] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setIsOpaque(true);\r\n    }, opacityDelay);\r\n  }, [opacityDelay]);\r\n\r\n  return (\r\n    <div\r\n      className={`imageCard${isOpaque ? \"\" : \" hidden\"}`}\r\n      onClick={() => {\r\n        openModal(image);\r\n      }}\r\n    >\r\n      <img src={image && image.urls.regular} alt=\"\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  modalImage: state.modalImage\r\n});\r\n\r\nexport default connect(mapStateToProps, { openModal })(ImageCard);\r\n","import { OPEN_MODAL } from \"./actionTypes\";\r\nimport { setModalImage } from \"./setModalImage\";\r\n\r\nexport const openModal = image => async (dispatch, getState) => {\r\n  await dispatch(setModalImage(image));\r\n  dispatch({\r\n    type: OPEN_MODAL,\r\n    payload: getState().modalImage\r\n  });\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Masonry from \"masonry-layout\";\r\nimport imagesLoaded from \"imagesloaded\";\r\n\r\nimport { getImagesOnScroll } from \"../actions/getImagesOnScroll\";\r\nimport ImageCard from \"./ImageCard\";\r\n\r\nconst ImageCardContainer = ({ images, getImagesOnScroll }) => {\r\n  useEffect(() => {\r\n    const imageCardContainer = document.querySelector(\".imageCardContainer\");\r\n    imagesLoaded(imageCardContainer, () =>\r\n      new Masonry(imageCardContainer, {\r\n        itemSelector: \".imageCard\",\r\n        columnWidth: \".imageCardSizer\",\r\n        percentPosition: true\r\n      }).layout()\r\n    );\r\n  });\r\n  const renderCardSizer = () => <div className=\"imageCardSizer\" />;\r\n\r\n  const renderImages = () =>\r\n    images.map((image, index) => (\r\n      <ImageCard key={image.id} opacityDelay={100 + 20 * index} image={image} />\r\n    ));\r\n\r\n  return (\r\n    <main className=\"imageCardContainer\">\r\n      <InfiniteScroll\r\n        dataLength={images.length}\r\n        next={getImagesOnScroll}\r\n        scrollThreshold={0.8}\r\n        hasMore={true}\r\n        loader={<div />}\r\n      >\r\n        {renderCardSizer()}\r\n        {renderImages()}\r\n      </InfiniteScroll>\r\n    </main>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  images: state.images,\r\n  modalImage: state.modalImage\r\n});\r\n\r\nexport default connect(mapStateToProps, { getImagesOnScroll })(ImageCardContainer);\r\n","import { GET_IMAGES_ON_SCROLL } from \"./actionTypes\";\r\nimport { getImages } from './getImages';\r\nimport { updateScrollLoads } from \"./updateScrollLoads\";\r\n\r\nexport const getImagesOnScroll = () => async (dispatch, getState) => {\r\n  const response = await dispatch(getImages());\r\n  await dispatch({\r\n    type: GET_IMAGES_ON_SCROLL,\r\n    payload: response\r\n  });\r\n  dispatch(updateScrollLoads(getState().scrollLoads + 1));\r\n};","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst ModalImage = ({ modalImage }) => (\r\n  <img src={modalImage && modalImage.urls.raw} alt=\"\" />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  modalImage: state.modalImage\r\n});\r\n\r\nexport default connect(mapStateToProps)(ModalImage);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nconst Arrow = ({ direction }) => (\r\n  <i />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  \r\n});\r\n\r\nexport default connect(mapStateToProps, {})(Arrow);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport ModalArrow from \"./ModalArrow\";\r\n\r\nconst ModalNavigation = ({}) => (\r\n  <div>\r\n    <ModalArrow direction=\"left\" className=\"arrowLeft\" />\r\n    <ModalArrow direction=\"right\" className=\"arrowRight\" />\r\n  </div>\r\n);\r\n\r\nconst mapStateToProps = state => ({});\r\n\r\nexport default connect(mapStateToProps, {})(ModalNavigation);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport ReactModal from \"react-modal\";\r\n\r\nimport { closeModal } from \"../actions/closeModal\";\r\nimport ModalImage from \"./ModalImage\";\r\nimport ModalNavigation from \"./ModalNavigation\";\r\n\r\nReactModal.setAppElement(\"#root\");\r\n\r\nconst Modal = ({ closeModal, isModalOpen, image }) => (\r\n  <ReactModal\r\n    isOpen={isModalOpen}\r\n    onRequestClose={closeModal}\r\n    className=\"Modal\"\r\n    overlayClassName=\"Overlay\"\r\n  >\r\n    <ModalImage />\r\n    \r\n\r\n\r\n    <ModalNavigation />\r\n  </ReactModal>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isModalOpen: state.isModalOpen,\r\n  image: state.modalImage\r\n});\r\n\r\nexport default connect(mapStateToProps, { closeModal })(Modal);\r\n","import { CLOSE_MODAL } from \"./actionTypes\";\r\nimport { setModalImage } from './setModalImage';\r\n\r\nexport const closeModal = () => async dispatch => {\r\n  await dispatch(setModalImage(null));\r\n  dispatch({\r\n    type: CLOSE_MODAL\r\n  });\r\n};\r\n","import React from \"react\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport reducers from \"../reducers\";\r\nimport SearchForm from \"./SearchForm\";\r\nimport ImageCardContainer from \"./ImageCardContainer\";\r\nimport Modal from \"./Modal\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunk)));\r\n\r\n// const store = createStore(reducers, applyMiddleware(thunk));\r\n\r\nconst App = () => (\r\n  <Provider store={store}>\r\n    <div className=\"App container\">\r\n      <SearchForm />\r\n      <ImageCardContainer />\r\n      <Modal />\r\n    </div>\r\n  </Provider>\r\n);\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./components/App\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\n\r\nReactDOM.render(<App />, rootElement);\r\n"],"sourceRoot":""}