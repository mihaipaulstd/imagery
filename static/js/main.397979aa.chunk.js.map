{"version":3,"sources":["components/ImageCard.js","components/FormTitle.js","components/FormInput.js","components/SearchForm.js","api/pexels.js","api/keys.js","components/App.js","index.js"],"names":["ImageCard","props","state","hidden","blurred","imageRef","React","createRef","show","bind","hide","focus","blur","triggerModal","setTimeout","this","opacityDelay","blurDelay","current","addEventListener","setState","imageProperties","className","src","ref","Component","FormTitle","FormInput","term","onInputChange","e","target","value","onChange","type","spellCheck","SearchForm","onFormSubmit","preventDefault","onSubmit","instance","axios","create","baseURL","headers","Authorization","name","key","find","api","ReactModal","setAppElement","App","per_load","loads","images","Array","currentImage","Object","currentTerm","showModal","submitHandler","fetchImagesOnScroll","handleOpenModal","handleCloseModal","imageContainer","document","querySelector","imagesLoaded","Masonry","itemSelector","columnWidth","percentPosition","layout","pexels","get","params","query","per_page","page","then","object","data","photos","dataLength","length","next","scrollThreshold","hasMore","loader","map","image","index","id","large","isOpen","contentLabel","onRequestClose","overlayClassName","original","rootElement","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.397979aa.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass ImageCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      hidden: true,\r\n      blurred: true\r\n    };\r\n\r\n    this.imageRef = React.createRef();\r\n\r\n    this.show = this.show.bind(this);\r\n    this.hide = this.hide.bind(this);\r\n    this.focus = this.focus.bind(this);\r\n    this.blur = this.blur.bind(this);\r\n    this.triggerModal = this.triggerModal.bind(this);\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    setTimeout(() => {\r\n      this.show();\r\n    }, this.props.opacityDelay)\r\n\r\n    setTimeout(() => {\r\n      this.focus();\r\n    }, this.props.blurDelay)\r\n\r\n    this.imageRef.current.addEventListener('click', this.triggerModal);\r\n\r\n  }\r\n\r\n  show() {\r\n    this.setState({ hidden: false })\r\n  }\r\n\r\n  hide() {\r\n    this.setState({ hidden: true })\r\n  }\r\n\r\n  focus() {\r\n    this.setState({ blurred: false })\r\n  }\r\n\r\n  blur() {\r\n    this.setState({ blurred: true })\r\n  }\r\n\r\n  triggerModal() {\r\n    this.props.triggerModal({ imageProperties: this.props.imageProperties });\r\n    \r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n        <div className={`imageCard ${this.state.hidden ? 'hidden' : ''} ${this.state.blurred ? 'blurred' : ''}`}>\r\n          <img\r\n            src={ this.props.src }\r\n            ref={ this.imageRef } \r\n          />\r\n        </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default ImageCard;","import React, { Component } from 'react';\r\n\r\nclass FormTitle extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <h2 className=\"formTitle\">\r\n        Search images\r\n      </h2>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default FormTitle;","import React, { Component } from 'react';\r\n\r\nclass FormInput extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { term: '' };\r\n    this.onInputChange = this.onInputChange.bind(this);\r\n  }\r\n\r\n  onInputChange(e) {\r\n    this.setState({ term: e.target.value });\r\n    this.props.onChange(e.target.value);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <input className=\"formInput\" type=\"text\" spellCheck=\"false\" value={ this.state.term } onChange={ this.onInputChange }/>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default FormInput;","import React, { Component } from 'react';\r\n\r\nimport FormTitle from './FormTitle';\r\nimport FormInput from './FormInput';\r\n\r\nclass SearchForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { term: '' }\r\n\r\n    this.onInputChange = this.onInputChange.bind(this);\r\n    this.onFormSubmit = this.onFormSubmit.bind(this);\r\n  }\r\n\r\n  onInputChange(term) {\r\n    this.setState({ term: term });\r\n  }\r\n\r\n  onFormSubmit(e) {\r\n    e.preventDefault();\r\n    \r\n    this.props.onSubmit(this.state.term);\r\n  }\r\n  \r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={ this.onFormSubmit } className=\"searchForm\">\r\n        <FormTitle />\r\n        <FormInput onChange={ this.onInputChange }/>\r\n      </form>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default SearchForm;","import axios from 'axios/index'\r\nimport keys from './keys'\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://api.pexels.com/',\r\n  headers: {\r\n    Authorization: keys.find(api => api.name == 'pexels').key\r\n  }\r\n});\r\n\r\nexport default instance;","export default [\r\n  {\r\n    name: 'pexels',\r\n    key: '563492ad6f91700001000001cc1c1c42d7d749968d5bbb920ad21688'\r\n    // key: '563492ad6f9170000100000172b1e86d0afa4b77a6fa2a3c6f452460'\r\n  }\r\n]","import React, { Component } from 'react';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport Masonry from 'masonry-layout';\r\nimport imagesLoaded from 'imagesloaded';\r\nimport ReactModal from 'react-modal';\r\n\r\nimport ImageCard from './ImageCard';\r\nimport SearchForm from './SearchForm';\r\n\r\nimport pexels from '../api/pexels';\r\n\r\nReactModal.setAppElement('#root');\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      per_load: 30,\r\n      loads: 1,\r\n      images: new Array(),\r\n      currentImage: new Object(),\r\n      currentTerm: null,\r\n      showModal: false\r\n    };\r\n    this.submitHandler = this.submitHandler.bind(this);\r\n    this.fetchImagesOnScroll = this.fetchImagesOnScroll.bind(this);\r\n    this.handleOpenModal = this.handleOpenModal.bind(this);\r\n    this.handleCloseModal = this.handleCloseModal.bind(this);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const imageContainer = document.querySelector('.imageContainer');\r\n    \r\n    imagesLoaded(imageContainer, () => \r\n      new Masonry(imageContainer, {\r\n        itemSelector: '.imageCard',\r\n        columnWidth: '.imageCardSizer',\r\n        percentPosition: true\r\n      }).layout()\r\n    )\r\n  }\r\n\r\n  submitHandler(term) {\r\n    pexels.get('/v1/search', {\r\n      params: {\r\n        query: term,\r\n        per_page: this.state.per_load,\r\n        page: this.state.loads\r\n      }\r\n    })\r\n      .then(object => {\r\n        this.setState({\r\n          images: object.data.photos,\r\n          currentTerm: term\r\n        })\r\n      });\r\n  }\r\n  \r\n  fetchImagesOnScroll() {\r\n    pexels.get('/v1/search', {\r\n      params: {\r\n        query: this.state.currentTerm,\r\n        per_page: this.state.per_load,\r\n        page: this.state.loads + 1\r\n      }\r\n    })\r\n      .then(object => {\r\n        this.setState({\r\n          // images: this.state.images.concat(object.data.photos),\r\n          images: [...this.state.images, ...object.data.photos],\r\n          loads: this.state.loads + 1\r\n        })\r\n      });\r\n  }\r\n\r\n  handleOpenModal({ imageProperties }) {\r\n    this.setState({\r\n      showModal: true,\r\n      currentImage: imageProperties\r\n    })\r\n\r\n  }\r\n  \r\n  handleCloseModal() {\r\n    this.setState({ showModal: false });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"app container\">\r\n        <SearchForm onSubmit={ this.submitHandler } />\r\n        <InfiniteScroll\r\n          className=\"imageContainer\"\r\n          dataLength={ this.state.images.length }\r\n          next={ this.fetchImagesOnScroll }\r\n          scrollThreshold={ 0.7 }\r\n          hasMore={ true }\r\n          loader={ <div /> }\r\n        >\r\n\r\n          <div className=\"imageCardSizer\"></div>\r\n\r\n          {this.state.images.map((image, index) =>\r\n            <ImageCard\r\n              key={ image.id }\r\n              opacityDelay={ 75 * index }\r\n              src={ image.src.large }\r\n              imageProperties={ image }\r\n              triggerModal={ this.handleOpenModal }\r\n            />\r\n          )}\r\n\r\n          <ReactModal \r\n            isOpen={ this.state.showModal }\r\n            contentLabel=\"onRequestClose\"\r\n            onRequestClose={ this.handleCloseModal }\r\n            className=\"Modal\"\r\n            overlayClassName=\"Overlay\"\r\n          >\r\n              <img\r\n                src={\r\n                  typeof this.state.currentImage.src !== 'undefined'\r\n                  ? this.state.currentImage.src.original\r\n                  : '' \r\n                }\r\n              >\r\n              </img>\r\n          </ReactModal>\r\n        </InfiniteScroll>\r\n      </div>\r\n    )\r\n  }\r\n} \r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './components/App';\r\n\r\nconst rootElement = document.getElementById('root');\r\n\r\nReactDOM.render(<App />, rootElement);"],"sourceRoot":""}