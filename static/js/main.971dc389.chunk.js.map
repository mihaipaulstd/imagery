{"version":3,"sources":["components/FormTitle.js","components/FormInput.js","components/SearchForm.js","components/ImageCard.js","components/ImageCardContainer.js","components/ModalImage.js","components/Modal.js","api/keys/pexelsKeys.js","api/pexels.js","components/App.js","index.js"],"names":["FormTitle","href","className","Component","FormInput","props","state","term","onInputChange","bind","e","this","setState","target","value","onChange","type","spellCheck","placeholder","SearchForm","onFormSubmit","preventDefault","querySelector","blur","onSubmit","ImageCard","isOpaque","image","undefined","imageRef","React","createRef","setSelf","setOpaque","onClick","setTimeout","opacityDelay","current","addEventListener","handleImagesOnClick","src","large","ref","alt","ImageCardContainer","imageContainer","document","imagesLoaded","Masonry","itemSelector","columnWidth","percentPosition","layout","dataLength","next","scrollFetchHandler","scrollThreshold","hasMore","loader","images","map","index","key","id","ModalImage","ReactModal","setAppElement","Modal","isOpen","open","close","contentLabel","onRequestClose","overlayClassName","large2x","KEYS","instance","axios","create","baseURL","headers","Authorization","PEXELS_KEYS","App","per_load","loads","Math","floor","random","currentTerm","modal","fetchImages","openModal","searchTerm","pexels","get","params","query","per_page","page","then","response","data","photos","length","catch","error","rootElement","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.971dc389.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass FormTitle extends Component {\r\n  render() {\r\n    return (\r\n      <a href=\"/imagery\" className=\"formTitle\">\r\n        imagery.\r\n      </a>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default FormTitle;","import React, { Component } from 'react';\r\n\r\nclass FormInput extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { term: '' };\r\n    this.onInputChange = this.onInputChange.bind(this);\r\n  }\r\n\r\n  onInputChange(e) {\r\n    this.setState({ term: e.target.value });\r\n    this.props.onChange(e.target.value);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"formInputContainer\">\r\n        <input\r\n          className=\"formInput\"\r\n          type=\"text\"\r\n          spellCheck=\"false\"\r\n          placeholder=\"Search stock photos\"\r\n          value={ this.state.term }\r\n          onChange={ this.onInputChange }\r\n        />\r\n        <button\r\n          type=\"submit\"\r\n          className=\"searchIcon\"\r\n        >\r\n          <i className=\"fas fa-search\" />\r\n        </button>\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default FormInput;","import React, { Component } from 'react';\r\n\r\nimport FormTitle from './FormTitle';\r\nimport FormInput from './FormInput';\r\n\r\nclass SearchForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { term: '' }\r\n\r\n    this.onInputChange = this.onInputChange.bind(this);\r\n    this.onFormSubmit = this.onFormSubmit.bind(this);\r\n  }\r\n\r\n  onInputChange(term) {\r\n    this.setState({ term: term });\r\n  }\r\n\r\n  onFormSubmit(e) {\r\n    e.preventDefault();\r\n    e.target.querySelector('input').blur();\r\n    this.props.onSubmit(this.state.term);\r\n  }\r\n  \r\n\r\n  render() {\r\n    return (\r\n      <header>\r\n        <form onSubmit={ this.onFormSubmit } className=\"searchForm\">\r\n          <FormTitle />\r\n          <FormInput onChange={ this.onInputChange }/>\r\n        </form>\r\n      </header>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default SearchForm;","import React, { Component } from 'react';\r\n\r\nclass ImageCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isOpaque: false,\r\n      image: undefined\r\n    };\r\n\r\n    this.imageRef = React.createRef();\r\n\r\n    this.setSelf = this.setSelf.bind(this);\r\n    this.setOpaque = this.setOpaque.bind(this);\r\n    this.onClick = this.onClick.bind(this);\r\n\r\n  }\r\n\r\n  \r\n\r\n  componentDidMount() {\r\n    this.setSelf();\r\n    this.setOpaque();\r\n    this.onClick();\r\n    \r\n  }\r\n\r\n  setSelf() {\r\n    this.setState({\r\n      image: this.props.image\r\n    })\r\n  }\r\n  \r\n  setOpaque() {\r\n    setTimeout(() => {\r\n      this.setState({\r\n        isOpaque: true\r\n      })\r\n    }, this.props.opacityDelay);\r\n  }\r\n\r\n  onClick() {\r\n    this.imageRef.current.addEventListener('click', () => {\r\n      this.props.handleImagesOnClick(this.state.image);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className={`imageCard${this.state.isOpaque ? '' : ' hidden'}`}\r\n      >\r\n        <img\r\n          src={ this.props.image.src.large }\r\n          ref={ this.imageRef }\r\n          alt=\"\"\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default ImageCard;","import React, { Component } from 'react';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport Masonry from 'masonry-layout';\r\nimport imagesLoaded from 'imagesloaded';\r\n\r\nimport ImageCard from './ImageCard';\r\n\r\nclass ImageCardContainer extends Component {\r\n\r\n\r\n  componentDidUpdate() {\r\n    const imageContainer = document.querySelector('.imageCardContainer');\r\n    \r\n    imagesLoaded(imageContainer, () => \r\n      new Masonry(imageContainer, {\r\n        itemSelector: '.imageCard',\r\n        columnWidth: '.imageCardSizer',\r\n        percentPosition: true\r\n      }).layout()\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <main className=\"imageCardContainer\">\r\n        <InfiniteScroll\r\n          dataLength={ this.props.dataLength }\r\n          next={ this.props.scrollFetchHandler }\r\n          scrollThreshold={ 0.8 }\r\n          hasMore={ true }\r\n          loader={ <div /> }\r\n        >\r\n          <div className=\"imageCardSizer\"></div>\r\n\r\n          {this.props.images.map((image, index) =>\r\n            <ImageCard\r\n              key={ image.id }\r\n              opacityDelay={ 15 * index }\r\n              src={ image.src.large }\r\n              image={ image }\r\n              handleImagesOnClick={ this.props.handleImagesOnClick }\r\n            />\r\n          )}\r\n        </InfiniteScroll>\r\n      </main>\r\n      \r\n    )\r\n  }\r\n}\r\n\r\nexport default ImageCardContainer;","import React, { Component } from 'react';\r\n\r\nclass ModalImage extends Component {\r\n  render() {\r\n    return (\r\n        <img\r\n          src={ this.props.src }\r\n          alt=\"\"\r\n        />\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default ModalImage;","import React, { Component } from 'react';\r\nimport ReactModal from 'react-modal';\r\n\r\nimport ModalImage from './ModalImage'\r\n\r\nReactModal.setAppElement('#root');\r\n\r\nclass Modal extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isOpen: false,\r\n      image: undefined\r\n    }\r\n\r\n    this.open = this.open.bind(this);\r\n    this.close = this.close.bind(this);\r\n  }\r\n\r\n\r\n  open(image) {\r\n    this.setState({\r\n      isOpen: true,\r\n      image: image\r\n    });\r\n  }\r\n  \r\n  close() {\r\n    this.setState({\r\n      isOpen: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ReactModal \r\n        isOpen={ this.state.isOpen }\r\n        contentLabel=\"onRequestClose\"\r\n        onRequestClose={ this.close }\r\n        className=\"Modal\"\r\n        overlayClassName={ `Overlay${this.state.isOpen ? ' backdropBlurred' : '' }` }\r\n      >\r\n        <ModalImage\r\n          src={\r\n            this.state.image\r\n            ? this.state.image.src.large2x\r\n            : '' \r\n          }\r\n          alt=\"\"\r\n        />\r\n      </ReactModal>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default Modal;","const KEYS = [\r\n  '563492ad6f9170000100000172b1e86d0afa4b77a6fa2a3c6f452460',\r\n  '563492ad6f91700001000001cc1c1c42d7d749968d5bbb920ad21688',\r\n  '563492ad6f917000010000017a1d9c70c748417ea6e670fb840a0958'\r\n]\r\n\r\nexport default KEYS;","import axios from 'axios/index'\r\nimport PEXELS_KEYS from './keys/pexelsKeys'\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://api.pexels.com/',\r\n  headers: {\r\n    Authorization: PEXELS_KEYS[2]\r\n  }\r\n});\r\n\r\nexport default instance;","import React, { Component } from 'react';\r\nimport imagesLoaded from 'imagesloaded';\r\n\r\nimport SearchForm from './SearchForm';\r\nimport ImageCardContainer from './ImageCardContainer'\r\nimport Modal from './Modal'\r\n\r\n\r\n\r\nimport pexels from '../api/pexels';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      per_load: 20,\r\n      loads: Math.floor(Math.random() * 300),\r\n      images: [],\r\n      currentTerm: null\r\n    };\r\n\r\n\r\n    this.modal = React.createRef();\r\n\r\n    this.fetchImages = this.fetchImages.bind(this);\r\n    this.openModal = this.openModal.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchImages();\r\n  }\r\n\r\n  fetchImages(searchTerm) {\r\n    const term = searchTerm || this.state.currentTerm;\r\n    \r\n    pexels.get(term ? '/v1/search' : '/v1/curated', {\r\n      params: {\r\n        query: term ? term : '',\r\n        per_page: this.state.per_load,\r\n        page: this.state.loads + 1\r\n      }\r\n    })\r\n      .then(response => {\r\n        imagesLoaded(document.querySelector('.imageCardContainer'), () => {\r\n          this.setState({\r\n            images: searchTerm || this.state.loads === 0 ? response.data.photos : [...this.state.images, ...response.data.photos],\r\n            loads: !response.data.photos.length ? 0 : this.state.loads + 1,\r\n            currentTerm: term\r\n          })\r\n        }\r\n    )\r\n        \r\n      })\r\n      .catch(error => { });\r\n  }\r\n\r\n  openModal(image) {\r\n    this.modal.current.open(image);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App container\">\r\n        <SearchForm\r\n          onSubmit={ this.fetchImages }\r\n        />\r\n        <ImageCardContainer\r\n          dataLength={ this.state.images.length }\r\n          scrollFetchHandler={ this.fetchImages }\r\n          images={ this.state.images }\r\n          handleImagesOnClick={ this.openModal }\r\n        />\r\n        <Modal\r\n          ref={ this.modal }\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n} \r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './components/App';\r\n\r\nconst rootElement = document.getElementById('root');\r\n\r\nReactDOM.render(<App />, rootElement);"],"sourceRoot":""}