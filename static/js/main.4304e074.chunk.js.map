{"version":3,"sources":["reducers/index.js","reducers/images.js","actions/actionTypes.js","reducers/query.js","reducers/scrollLoads.js","reducers/perScrollLoad.js","reducers/modal.js","reducers/modalImage.js","components/FormTitle.js","components/FormInput.js","actions/setQuery.js","api/unsplash.js","api/keys/unsplash.js","actions/fetchImages.js","actions/updateScrollLoads.js","components/SearchForm.js","actions/setModalImage.js","components/ImageCard.js","actions/openModal.js","components/ImageCardContainer.js","components/ModalImage.js","components/Modal.js","actions/closeModal.js","components/App.js","index.js"],"names":["combineReducers","images","action","type","console","log","payload","data","results","query","scrollLoads","loads","perLoad","per_load","isModalOpen","isOpen","modalImage","image","FormTitle","href","className","connect","state","setQuery","spellCheck","placeholder","value","onChange","e","target","instance","axios","create","baseURL","headers","Authorization","fetchImages","dispatch","getState","a","unsplash","get","params","per_page","page","response","onSubmit","preventDefault","setModalImage","openModal","opacityDelay","useState","isOpaque","setIsOpaque","useEffect","setOpaque","setTimeout","onClick","src","urls","regular","alt","imageCardContainer","document","querySelector","imagesLoaded","Masonry","itemSelector","columnWidth","percentPosition","layout","dataLength","length","next","scrollThreshold","hasMore","loader","map","index","key","id","raw","ReactModal","setAppElement","closeModal","onRequestClose","overlayClassName","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","thunk","App","rootElement","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.4304e074.chunk.js","sourcesContent":["import { combineReducers } from \"redux\";\r\n\r\nimport { imagesReducer } from \"./images\";\r\nimport { queryReducer } from \"./query\";\r\nimport { scrollLoadsReducer } from \"./scrollLoads\";\r\nimport { perScrollLoadReducer } from \"./perScrollLoad\";\r\nimport { modalReducer } from \"./modal\";\r\nimport { modalImageReducer } from \"./modalImage\";\r\n\r\nexport default combineReducers({\r\n  images: imagesReducer,\r\n  query: queryReducer,\r\n  scrollLoads: scrollLoadsReducer,\r\n  perLoad: perScrollLoadReducer,\r\n  isModalOpen: modalReducer,\r\n  modalImage: modalImageReducer\r\n});\r\n","import {\r\n  FETCH_IMAGES_ON_SEARCH,\r\n  FETCH_IMAGES_ON_SCROLL\r\n} from \"../actions/actionTypes\";\r\n\r\nexport const imagesReducer = (images = [], action) => {\r\n  switch (action.type) {\r\n    case FETCH_IMAGES_ON_SEARCH:\r\n      console.log(action.payload);\r\n      return action.payload.data.results;\r\n    case FETCH_IMAGES_ON_SCROLL:\r\n      console.log(action.payload);\r\n      return [...images, ...action.payload.data.results];\r\n    default:\r\n      return images;\r\n  }\r\n};\r\n","export const FETCH_IMAGES_ON_SEARCH = \"FETCH_IMAGES_ON_SEARCH\";\r\nexport const FETCH_IMAGES_ON_SCROLL = \"FETCH_IMAGES_ON_SCROLL\";\r\nexport const SET_QUERY = \"SET_QUERY\";\r\nexport const UPDATE_SCROLL_LOADS = \"UPDATE_SCROLL_LOADS\";\r\nexport const SET_IMAGES_NO_PER_SCROLL_LOAD = \"SET_IMAGES_NO_PER_SCROLL_LOAD\";\r\nexport const OPEN_MODAL = \"OPEN_MODAL\";\r\nexport const CLOSE_MODAL = \"CLOSE_MODAL\";\r\nexport const SET_MODAL_IMAGE = \"SET_MODAL_IMAGE\";\r\nexport const SET_SCROLL_LOADS = \"SET_SCROLL_LOADS\";\r\n","import { SET_QUERY } from \"../actions/actionTypes\";\r\n\r\nexport const queryReducer = (query = \"\", action) => {\r\n  switch (action.type) {\r\n    case SET_QUERY:\r\n      console.log(action.payload);\r\n      return action.payload;\r\n    default:\r\n      return query;\r\n  }\r\n};\r\n","import { SET_SCROLL_LOADS } from \"../actions/actionTypes\";\r\n\r\nexport const scrollLoadsReducer = (loads = 0, action) => {\r\n  switch (action.type) {\r\n    case SET_SCROLL_LOADS:\r\n      return loads + 1;\r\n    default:\r\n      return loads;\r\n  }\r\n};\r\n","import { SET_IMAGES_NO_PER_SCROLL_LOAD } from \"../actions/actionTypes\";\r\n\r\nexport const perScrollLoadReducer = (per_load = 20, action) => {\r\n  switch (action.type) {\r\n    case SET_IMAGES_NO_PER_SCROLL_LOAD:\r\n      return action.payload.per_load;\r\n    default:\r\n      return per_load;\r\n  }\r\n};\r\n","import { OPEN_MODAL, CLOSE_MODAL } from \"../actions/actionTypes\";\r\n\r\nexport const modalReducer = (isOpen = false, action) => {\r\n  switch (action.type) {\r\n    case OPEN_MODAL:\r\n      return true;\r\n    case CLOSE_MODAL:\r\n      return false;\r\n    default:\r\n      return isOpen;\r\n  }\r\n};\r\n","import { SET_MODAL_IMAGE } from \"../actions/actionTypes\";\r\n\r\nexport const modalImageReducer = (image = null, action) => {\r\n  switch (action.type) {\r\n    case SET_MODAL_IMAGE:\r\n      return action.payload;\r\n    default:\r\n      return image;\r\n  }\r\n};\r\n","import React from \"react\";\r\n\r\nconst FormTitle = () => (\r\n  <a href=\"/imagery\" className=\"formTitle\">\r\n    imagery.\r\n  </a>\r\n);\r\n\r\nexport default FormTitle;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { setQuery } from \"../actions/setQuery\";\r\n\r\nconst FormInput = ({ query, setQuery }) => (\r\n  <div className=\"formInputContainer\">\r\n    <input\r\n      className=\"formInput\"\r\n      type=\"text\"\r\n      spellCheck=\"false\"\r\n      placeholder=\"Search stock photos\"\r\n      value={query}\r\n      onChange={e => setQuery(e.target.value)}\r\n    />\r\n    <button type=\"submit\" className=\"searchIcon\">\r\n      <i className=\"fas fa-search\" />\r\n    </button>\r\n  </div>\r\n);\r\n\r\nconst mapStateToProps = state => ({ query: state.query });\r\n\r\nexport default connect(mapStateToProps, { setQuery })(FormInput);\r\n","import { SET_QUERY } from \"./actionTypes\";\r\n\r\nexport const setQuery = query => ({\r\n  type: SET_QUERY,\r\n  payload: query\r\n});\r\n","import axios from \"axios/index\";\r\nimport { ACCESS_KEY, SECRET_KEY } from \"./keys/unsplash\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"https://api.unsplash.com/\",\r\n  headers: {\r\n    Authorization: `Client-ID ${ACCESS_KEY}`\r\n  }\r\n});\r\n\r\nexport default instance;\r\n","export const ACCESS_KEY = 'Zd5MIEmI9A3mvb3rEQlTgfm_iPBTQlVFjdYtf7n2nTY';\r\nexport const SECRET_KEY = 'Nz4lJWI-MBg68QaBtPTMAuale7NHJEk2uMlYmL4gibI';","import { FETCH_IMAGES_ON_SEARCH, FETCH_IMAGES_ON_SCROLL } from \"./actionTypes\";\r\nimport { updateScrollLoads } from \"./updateScrollLoads\";\r\nimport unsplash from \"../api/unsplash\";\r\n\r\nexport const fetchImages = () => async (dispatch, getState) => {\r\n  const response = await unsplash.get(\"/search/photos\", {\r\n    params: {\r\n      query: getState().query,\r\n      per_page: getState().perLoad,\r\n      page: getState().scrollLoads + 1\r\n    }\r\n  });\r\n  await dispatch(updateScrollLoads());\r\n  dispatch({\r\n    type: !getState().scrollLoads\r\n      ? FETCH_IMAGES_ON_SEARCH\r\n      : FETCH_IMAGES_ON_SCROLL,\r\n    payload: response\r\n  });\r\n};\r\n","import { SET_SCROLL_LOADS } from \"./actionTypes\";\r\n// debugger\r\nexport const updateScrollLoads = () => ({\r\n  type: SET_SCROLL_LOADS\r\n});\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport FormTitle from \"./FormTitle\";\r\nimport FormInput from \"./FormInput\";\r\nimport { fetchImages } from \"../actions/fetchImages\";\r\n\r\nconst SearchForm = ({ fetchImages }) => (\r\n  <header>\r\n    <form\r\n      onSubmit={e => {\r\n        e.preventDefault();\r\n        fetchImages();\r\n      }}\r\n      className=\"searchForm\"\r\n    >\r\n      <FormTitle />\r\n      <FormInput />\r\n    </form>\r\n  </header>\r\n);\r\n\r\nexport default connect(null, { fetchImages })(SearchForm);\r\n","import {\r\n  SET_MODAL_IMAGE\r\n} from './actionTypes';\r\n\r\nexport const setModalImage = image => ({\r\n  type: SET_MODAL_IMAGE,\r\n  payload: image\r\n});","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { openModal } from \"../actions/openModal\";\r\n\r\nconst ImageCard = ({ image, opacityDelay, openModal }) => {\r\n  const [isOpaque, setIsOpaque] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setOpaque();\r\n  }, []);\r\n\r\n  const setOpaque = () => {\r\n    setTimeout(() => {\r\n      setIsOpaque(true);\r\n    }, opacityDelay);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`imageCard${isOpaque ? \"\" : \" hidden\"}`}\r\n      onClick={() => {\r\n        openModal(image);\r\n      }}\r\n    >\r\n      <img src={image.urls.regular} alt=\"\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  modalImage: state.modalImage\r\n});\r\n\r\nexport default connect(mapStateToProps, { openModal })(ImageCard);\r\n","import { OPEN_MODAL } from \"./actionTypes\";\r\nimport { setModalImage } from \"./setModalImage\";\r\n\r\nexport const openModal = image => async (dispatch, getState) => {\r\n  await dispatch(setModalImage(image));\r\n  dispatch({\r\n    type: OPEN_MODAL,\r\n    payload: getState().modalImage\r\n  });\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Masonry from \"masonry-layout\";\r\nimport imagesLoaded from \"imagesloaded\";\r\n\r\nimport { fetchImages } from \"../actions/fetchImages\";\r\nimport ImageCard from \"./ImageCard\";\r\n\r\nconst ImageCardContainer = ({ images, fetchImages }) => {\r\n  useEffect(() => {\r\n    const imageCardContainer = document.querySelector(\".imageCardContainer\");\r\n    imagesLoaded(imageCardContainer, () =>\r\n      new Masonry(imageCardContainer, {\r\n        itemSelector: \".imageCard\",\r\n        columnWidth: \".imageCardSizer\",\r\n        percentPosition: true\r\n      }).layout()\r\n    );\r\n  });\r\n  const renderCardSizer = () => <div className=\"imageCardSizer\" />;\r\n\r\n  const renderImages = () =>\r\n    images.map((image, index) => (\r\n      <ImageCard key={image.id} opacityDelay={100 + 20 * index} image={image} />\r\n    ));\r\n\r\n  return (\r\n    <main className=\"imageCardContainer\">\r\n      <InfiniteScroll\r\n        dataLength={images.length}\r\n        next={fetchImages}\r\n        scrollThreshold={0.8}\r\n        hasMore={true}\r\n        loader={<div />}\r\n      >\r\n        {renderCardSizer()}\r\n        {renderImages()}\r\n      </InfiniteScroll>\r\n    </main>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  images: state.images,\r\n  modalImage: state.modalImage\r\n});\r\n\r\nexport default connect(mapStateToProps, { fetchImages })(ImageCardContainer);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst ModalImage = ({ modalImage }) => (\r\n  <img src={modalImage.urls.raw} alt=\"\" />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  modalImage: state.modalImage\r\n});\r\n\r\nexport default connect(mapStateToProps)(ModalImage);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport ReactModal from \"react-modal\";\r\n\r\nimport { closeModal } from \"../actions/closeModal\";\r\nimport ModalImage from \"./ModalImage\";\r\n\r\nReactModal.setAppElement(\"#root\");\r\n\r\nconst Modal = ({ closeModal, isModalOpen, image }) => (\r\n  <ReactModal\r\n    isOpen={isModalOpen}\r\n    onRequestClose={closeModal}\r\n    className=\"Modal\"\r\n    overlayClassName=\"Overlay\"\r\n  >\r\n    <ModalImage />\r\n  </ReactModal>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isModalOpen: state.isModalOpen,\r\n  image: state.modalImage\r\n});\r\n\r\nexport default connect(mapStateToProps, { closeModal })(Modal);\r\n","import { CLOSE_MODAL } from \"./actionTypes\";\r\n\r\nexport const closeModal = image => ({\r\n  type: CLOSE_MODAL,\r\n  payload: image\r\n});\r\n","import React from \"react\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport reducers from \"../reducers\";\r\nimport SearchForm from \"./SearchForm\";\r\nimport ImageCardContainer from \"./ImageCardContainer\";\r\nimport Modal from \"./Modal\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunk)));\r\n\r\n// const store = createStore(reducers, applyMiddleware(thunk));\r\n\r\nconst App = () => (\r\n  <Provider store={store}>\r\n    <div className=\"App container\">\r\n      <SearchForm />\r\n      <ImageCardContainer />\r\n      <Modal />\r\n    </div>\r\n  </Provider>\r\n);\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./components/App\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\n\r\nReactDOM.render(<App />, rootElement);\r\n"],"sourceRoot":""}